name: Build and Test

on:
  push:
    branches:
      - '**'  
  pull_request:
    branches:
      - '**'  

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # ===== Server =====
      - name: Install Server Dependencies
        working-directory: server
        run: npm install

      - name: Run Server Tests
        working-directory: server
        run: npm run test

      # ===== Client =====
      - name: Install Client Dependencies
        working-directory: client
        run: npm install

      - name: Run Client Tests
        working-directory: client
        run: npm run test

  browser-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: client
        run: npm ci

      - name: Install Playwright Browsers
        working-directory: client
        run: npx playwright install chromium --with-deps

      - name: Start App and Run Tests
        working-directory: client
        run: npm run integration-tests 

  deploy-to-fly:
    if: github.ref == 'refs/heads/main'
    needs: [test, browser-tests]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Set up Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@v1
        with:
          flyctl_version: "latest" 
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only --access-token ${{ secrets.FLY_API_TOKEN }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}